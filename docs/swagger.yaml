openapi: 3.0.0
info:
  title: Schedule API Documentation
  version: 1.0.0
paths:
  /api/v1/account:
    post:
      summary: Create an account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreateRequest'
      responses:
        '201':
          description: Account successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCreateResponse'
        '400':
          description: Bad request - Input validation error or Email already exists
        '500':
          description: Internal Server Error - Unknown errors
      
  /api/v1/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Bad Request - Decode error or validation error
        '404':
          description: Not found - Record not found
        '403': 
          description: Forbidden - Wrong password or user is inactive

  /api/v1/admin/users/{userId}:
    put:
      summary: Update user information
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdateResponse'
        '400':
          description: Bad request - input validation errors or user id not present
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found - user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error - unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a user by ID
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDeleteResponse'
        '400':
          description: Bad request - user id not present
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - can't delete the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found - user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error - unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/admin/users/{userId}/schedule:
    post:
      summary: Create a schedule for a user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleCreateRequest'
      responses:
        '200':
          description: Schedules for the user created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleCreateResponse'
        '400':
          description: Bad request - input validation errors or user id not present
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error - unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/admin/users/{userId}/schedule/{scheduleId}:
    put:
      summary: Update a user's schedule by ID
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
        - in: path
          name: scheduleId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleUpdateRequest'
      responses:
        '200':
          description: User's schedule updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleUpdateResponse'
        '400':
          description: Bad request - schedule id not present
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found - schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error - unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a user's schedule by ID
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
        - in: path
          name: scheduleId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Schedule deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleDeleteResponse'
        '400':
          description: Bad request - schedule validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found - schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error - unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/admin/users:
    get:
      summary: Get users ordered by accumulated work hours within a date range
      description: |
        If `start_date` is not present, by default one week data will be displayed<br>
        If `end_date` is not present, current time will be set as `end_date` by default
      parameters:
        - in: query
          name: start_date
          schema:
            type: string
            format: date
          required: true
        - in: query
          name: end_date
          schema:
            type: string
            format: date
          required: true
      responses:
        '200':
          description: Users ordered by accumulated work hours
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersByWorkHoursResponse'
        '404':
          description: Not found - record not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error - unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/staff/schedule:
    get:
      summary: Get schedules for staff
      description: |
        Get schedules for staff within the specified date range. If `staff_id` is not present, it will retrieve schedules for the current user.<br>
        If `start_date` is not present, by default one week data will be displayed<br>
        If `end_date` is not present, current time will be set as `end_date` by default
        
      parameters:
        - in: query
          name: staff_id
          schema:
            type: integer
        - in: query
          name: start_date
          schema:
            type: string
            format: date
            example: "2023-08-01"
        - in: query
          name: end_date
          schema:
            type: string
            format: date
            example: "2023-08-30"
      responses:
        '200':
          description: Schedules for staff
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffSchedulesResponse'
        '400':
          description: Bad request - input validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found - schedules not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error - unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    AccountCreateRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        phone:
          type: string
        name:
          type: string
        role:
          type: string
      required:
        - email
        - password

    AccountCreateResponse:
      type: object
      properties:
        message:
          type: string
        payload:
          $ref: '#/components/schemas/AccountInfo'

    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - email
        - password

    LoginResponse:
      type: object
      properties:
        message:
          type: string
        payload:
          type: object
          properties:
            id:
              type: integer
            access_token:
              type: string

    UserUpdateRequest:
      type: object
      properties:
        name:
          type: string
        phone:
          type: string
        role:
          type: string

    UserUpdateResponse:
      type: object
      properties:
        message:
          type: string
        payload:
          $ref: '#/components/schemas/AccountInfo'

    AccountInfo:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        role:
          type: string
      
    UserDeleteResponse:
      type: object
      properties:
        message:
          type: string
        payload:
          type: object
          properties:
            user_id:
              type: integer
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
    ScheduleCreateRequest:
      type: object
      properties:
        date:
          type: string
          format: date
        shift:
          type: integer
      required:
        - date
        - shift

    ScheduleCreateResponse:
      type: object
      properties:
        message:
          type: string
        payload:
          type: object
          properties:
            user_id:
              type: integer
            shift:
              type: integer
            date:
              type: string
              format: date-time
            schedule_id:
              type: integer
            username:
              type: string
    ScheduleUpdateRequest:
      type: object
      properties:
        shift:
          type: integer
        date:
          type: string
          format: date
      required:
        - shift
        - date

    ScheduleUpdateResponse:
      type: object
      properties:
        message:
          type: string
        payload:
          type: object
          properties:
            id:
              type: integer
            date:
              type: string
              format: date-time
            length:
              type: integer
            user:
              type: string
    ScheduleDeleteResponse:
      type: object
      properties:
        message:
          type: string
        payload:
          type: object
          properties:
            schedule_id:
              type: integer
    UsersByWorkHoursResponse:
      type: object
      properties:
        message:
          type: string
        payload:
          type: array
          items:
            $ref: '#/components/schemas/UserWorkHoursInfo'

    UserWorkHoursInfo:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        accumulated_work_hours:
          type: integer
          
    StaffSchedulesResponse:
      type: object
      properties:
        UserID:
          type: integer
        Schedules:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleInfo'

    ScheduleInfo:
      type: object
      properties:
        work_date:
          type: string
          format: date
        shift_length:
          type: integer
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT